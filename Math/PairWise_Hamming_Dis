/*https://www.interviewbit.com/problems/sum-of-pairwise-hamming-distance/*/
void Traverse(vector<long long int> &sum,int val){
    long long int valRef=val;
    long long  int index=0;
    long long int iter = 34;
    while(iter--){
        
        if((valRef&1) == 0){
            sum[index]+=1;
            //cout<<"index "<<index<<" sum is " <<sum[index]<<" ";
        }
        valRef = valRef >>1;
        index++;
    }
}
int MaxBinSize(int a){
    int count=0;
    while(a){
        count++;
        a = a>>1;
    }
    //cout<<"count is "<<count<<" ";
    return count;
}
int Solution::hammingDistance(const vector<int> &A) {
    vector<long long int> sum(34,0);
    int size = A.size();
    long long int dev = 1000000007;
    int max = INT_MIN;
    for(int i=0;i<size;i++){
        Traverse(sum,A[i]);
        if(max<A[i]){
           max= A[i];
        }
    }
    
    long long int ans=0;
    int range = MaxBinSize(max);
    for(int i=0;i<range;i++){
        //cout<<" "<<sum[i]<<" ";
        ans = ans%dev+ (sum[i]*(size-sum[i]))%dev;
        ans = ans%dev;
    }
    ans = 2*ans;
    
    return ans%dev;
}
